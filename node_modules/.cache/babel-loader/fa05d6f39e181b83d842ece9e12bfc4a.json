{"ast":null,"code":"var _jsxFileName = \"D:\\\\a_programming\\\\javascript\\\\jhankar_mah_webDev\\\\travel-website\\\\src\\\\components\\\\GoogleMap\\\\GoogleMap.js\",\n    _s = $RefreshSig$();\n\nimport { GoogleApiWrapper } from \"google-maps-react\";\nimport React, { useState } from \"react\";\nimport Geocode from \"react-geocode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GoogleMap = props => {\n  _s();\n\n  console.log(props);\n  const mapStyles = {\n    width: \"50%\",\n    height: \"50%\"\n  }; // Geocode.setApiKey(\"AIzaSyA9OU-Yxhjj-yocOCSzwPAOQpPnAOLJBj8\");\n\n  Geocode.enableDebug(); // let x = Geocode.fromAddress(\"Eiffel Tower\").then(\n  //   (response) => {\n  //     const { lat, lng } = response.results[0].geometry.location;\n  //     console.log(lat, lng);\n  //   },\n  //   (error) => {\n  //     console.error(error);\n  //   }\n  // );\n  // console.log(x)\n\n  let [latitude, setLatitude] = useState(-33.7560119);\n  let [longitude, setLongitude] = useState(150.6038367);\n  let [address, setAddress] = useState(\"canada\");\n\n  const handle = e => {\n    e.preventDefault();\n    const encodedAddress = encodeURI(address);\n    fetch(`https://google-maps-geocoding.p.rapidapi.com/geocode/json?language=en&address=${encodedAddress}`).then(response => {\n      console.log(response);\n    }).catch(err => console.log(err));\n  };\n\n  console.log(latitude);\n  console.log(longitude);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handle,\n      children: \"click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GoogleMap, \"HfaZXWChImQZgPCMayfgcdWYNeg=\");\n\n_c = GoogleMap;\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyA9OU-Yxhjj-yocOCSzwPAOQpPnAOLJBj8\"\n})(GoogleMap);\n\nvar _c;\n\n$RefreshReg$(_c, \"GoogleMap\");","map":{"version":3,"sources":["D:/a_programming/javascript/jhankar_mah_webDev/travel-website/src/components/GoogleMap/GoogleMap.js"],"names":["GoogleApiWrapper","React","useState","Geocode","GoogleMap","props","console","log","mapStyles","width","height","enableDebug","latitude","setLatitude","longitude","setLongitude","address","setAddress","handle","e","preventDefault","encodedAddress","encodeURI","fetch","then","response","catch","err","apiKey"],"mappings":";;;AAAA,SAASA,gBAAT,QAAiC,mBAAjC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,eAApB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,QAAMG,SAAS,GAAG;AAChBC,IAAAA,KAAK,EAAE,KADS;AAEhBC,IAAAA,MAAM,EAAE;AAFQ,GAAlB,CAH2B,CAO3B;;AACAP,EAAAA,OAAO,CAACQ,WAAR,GAR2B,CAU3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAI,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,CAAC,UAAF,CAAtC;AACA,MAAI,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,WAAD,CAAxC;AACA,MAAI,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,QAAD,CAApC;;AACA,QAAMgB,MAAM,GAAIC,CAAD,IAAO;AACpBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,cAAc,GAAGC,SAAS,CAACN,OAAD,CAAhC;AACAO,IAAAA,KAAK,CACF,iFAAgFF,cAAe,EAD7F,CAAL,CAIGG,IAJH,CAISC,QAAD,IAAc;AACnBnB,MAAAA,OAAO,CAACC,GAAR,CAAYkB,QAAZ;AACA,KANH,EAOGC,KAPH,CAOUC,GAAD,IAASrB,OAAO,CAACC,GAAR,CAAYoB,GAAZ,CAPlB;AAQD,GAXD;;AAcArB,EAAAA,OAAO,CAACC,GAAR,CAAYK,QAAZ;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAYO,SAAZ;AAEA,sBACE;AAAA,4BAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEI,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAhDD;;GAAMd,S;;KAAAA,S;AAkDN,eAAeJ,gBAAgB,CAAC;AAC9B4B,EAAAA,MAAM,EAAE;AADsB,CAAD,CAAhB,CAEZxB,SAFY,CAAf","sourcesContent":["import { GoogleApiWrapper } from \"google-maps-react\";\r\nimport React, { useState } from \"react\";\r\nimport Geocode from \"react-geocode\";\r\n\r\nconst GoogleMap = (props) => {\r\n  console.log(props);\r\n\r\n  const mapStyles = {\r\n    width: \"50%\",\r\n    height: \"50%\",\r\n  };\r\n  // Geocode.setApiKey(\"AIzaSyA9OU-Yxhjj-yocOCSzwPAOQpPnAOLJBj8\");\r\n  Geocode.enableDebug();\r\n\r\n  // let x = Geocode.fromAddress(\"Eiffel Tower\").then(\r\n  //   (response) => {\r\n  //     const { lat, lng } = response.results[0].geometry.location;\r\n  //     console.log(lat, lng);\r\n  //   },\r\n  //   (error) => {\r\n  //     console.error(error);\r\n  //   }\r\n  // );\r\n  // console.log(x)\r\n\r\n  let [latitude, setLatitude] = useState(-33.7560119);\r\n  let [longitude, setLongitude] = useState(150.6038367);\r\n  let [address, setAddress] = useState(\"canada\");\r\n  const handle = (e) => {\r\n    e.preventDefault();\r\n    const encodedAddress = encodeURI(address);\r\n    fetch(\r\n      `https://google-maps-geocoding.p.rapidapi.com/geocode/json?language=en&address=${encodedAddress}`\r\n      \r\n    )\r\n      .then((response) => {\r\n       console.log(response)\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n  \r\n    \r\n  console.log(latitude)\r\n  console.log(longitude)\r\n\r\n  return (\r\n    <div>\r\n\r\n      <hr />\r\n      <button onClick={handle}>click me</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: \"AIzaSyA9OU-Yxhjj-yocOCSzwPAOQpPnAOLJBj8\",\r\n})(GoogleMap);\r\n"]},"metadata":{},"sourceType":"module"}