{"ast":null,"code":"var _jsxFileName = \"D:\\\\a_programming\\\\javascript\\\\jhankar_mah_webDev\\\\travel-website\\\\src\\\\components\\\\GoogleMap\\\\GoogleMap.js\",\n    _s = $RefreshSig$();\n\nimport { GoogleApiWrapper, Map, Marker } from \"google-maps-react\";\nimport React, { useState } from \"react\";\nimport Geocode from \"react-geocode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GoogleMap = props => {\n  _s();\n\n  console.log(props);\n  const mapStyles = {\n    width: \"50%\",\n    height: \"50%\"\n  }; // Geocode.setApiKey(\"AIzaSyA9OU-Yxhjj-yocOCSzwPAOQpPnAOLJBj8\");\n\n  Geocode.enableDebug(); // let x = Geocode.fromAddress(\"Eiffel Tower\").then(\n  //   (response) => {\n  //     const { lat, lng } = response.results[0].geometry.location;\n  //     console.log(lat, lng);\n  //   },\n  //   (error) => {\n  //     console.error(error);\n  //   }\n  // );\n  // console.log(x)\n\n  let [latitude, setLatitude] = useState('dhaka');\n  let [longitude, setLongitude] = useState('dhaka');\n  let [address, setAddress] = useState(\"canada\");\n  const encodedAddress = encodeURI(address);\n  fetch(`https://google-maps-geocoding.p.rapidapi.com/geocode/json?language=en&address=${encodedAddress}`, {\n    method: \"GET\",\n    headers: {\n      \"x-rapidapi-host\": \"google-maps-geocoding.p.rapidapi.com\",\n      \"x-rapidapi-key\": process.env.RAPIDAPI_KEY\n    }\n  }).then(response => response.json()).then(response => {\n    setLatitude(response.lat);\n    setLongitude(response.long);\n  }).catch(err => console.log(err));\n  console.log(latitude);\n  console.log(longitude);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Map, {\n      google: props.google,\n      zoom: 8,\n      style: mapStyles,\n      initialCenter: {\n        lat: latitude,\n        lng: longitude\n      },\n      children: /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: latitude,\n          lng: longitude\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GoogleMap, \"dS4LUeTdRdr3RfBQgwvA38c2Ba0=\");\n\n_c = GoogleMap;\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyA9OU-Yxhjj-yocOCSzwPAOQpPnAOLJBj8\"\n})(GoogleMap);\n\nvar _c;\n\n$RefreshReg$(_c, \"GoogleMap\");","map":{"version":3,"sources":["D:/a_programming/javascript/jhankar_mah_webDev/travel-website/src/components/GoogleMap/GoogleMap.js"],"names":["GoogleApiWrapper","Map","Marker","React","useState","Geocode","GoogleMap","props","console","log","mapStyles","width","height","enableDebug","latitude","setLatitude","longitude","setLongitude","address","setAddress","encodedAddress","encodeURI","fetch","method","headers","process","env","RAPIDAPI_KEY","then","response","json","lat","long","catch","err","google","lng","apiKey"],"mappings":";;;AAAA,SAASA,gBAAT,EAA2BC,GAA3B,EAAgCC,MAAhC,QAA8C,mBAA9C;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,eAApB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,QAAMG,SAAS,GAAG;AAChBC,IAAAA,KAAK,EAAE,KADS;AAEhBC,IAAAA,MAAM,EAAE;AAFQ,GAAlB,CAH2B,CAO3B;;AACAP,EAAAA,OAAO,CAACQ,WAAR,GAR2B,CAU3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAI,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,OAAD,CAAtC;AACA,MAAI,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,OAAD,CAAxC;AACA,MAAI,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,QAAD,CAApC;AACA,QAAMgB,cAAc,GAAGC,SAAS,CAACH,OAAD,CAAhC;AAEEI,EAAAA,KAAK,CACF,iFAAgFF,cAAe,EAD7F,EAEH;AACEG,IAAAA,MAAM,EAAE,KADV;AAEEC,IAAAA,OAAO,EAAE;AACP,yBAAmB,sCADZ;AAEP,wBAAkBC,OAAO,CAACC,GAAR,CAAYC;AAFvB;AAFX,GAFG,CAAL,CAUGC,IAVH,CAUSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAVtB,EAWGF,IAXH,CAWSC,QAAD,IAAc;AAClBd,IAAAA,WAAW,CAACc,QAAQ,CAACE,GAAV,CAAX;AACAd,IAAAA,YAAY,CAACY,QAAQ,CAACG,IAAV,CAAZ;AACD,GAdH,EAeGC,KAfH,CAeUC,GAAD,IAAS1B,OAAO,CAACC,GAAR,CAAYyB,GAAZ,CAflB;AAiBF1B,EAAAA,OAAO,CAACC,GAAR,CAAYK,QAAZ;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAYO,SAAZ;AAEA,sBACE;AAAA,2BACE,QAAC,GAAD;AACE,MAAA,MAAM,EAAET,KAAK,CAAC4B,MADhB;AAEE,MAAA,IAAI,EAAE,CAFR;AAGE,MAAA,KAAK,EAAEzB,SAHT;AAIE,MAAA,aAAa,EAAE;AAAEqB,QAAAA,GAAG,EAAEjB,QAAP;AAAiBsB,QAAAA,GAAG,EAAEpB;AAAtB,OAJjB;AAAA,6BAME,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAE;AAAEe,UAAAA,GAAG,EAAEjB,QAAP;AAAiBsB,UAAAA,GAAG,EAAEpB;AAAtB;AAAlB;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA1DD;;GAAMV,S;;KAAAA,S;AA4DN,eAAeN,gBAAgB,CAAC;AAC9BqC,EAAAA,MAAM,EAAE;AADsB,CAAD,CAAhB,CAEZ/B,SAFY,CAAf","sourcesContent":["import { GoogleApiWrapper, Map, Marker } from \"google-maps-react\";\r\nimport React, { useState } from \"react\";\r\nimport Geocode from \"react-geocode\";\r\n\r\nconst GoogleMap = (props) => {\r\n  console.log(props);\r\n\r\n  const mapStyles = {\r\n    width: \"50%\",\r\n    height: \"50%\",\r\n  };\r\n  // Geocode.setApiKey(\"AIzaSyA9OU-Yxhjj-yocOCSzwPAOQpPnAOLJBj8\");\r\n  Geocode.enableDebug();\r\n\r\n  // let x = Geocode.fromAddress(\"Eiffel Tower\").then(\r\n  //   (response) => {\r\n  //     const { lat, lng } = response.results[0].geometry.location;\r\n  //     console.log(lat, lng);\r\n  //   },\r\n  //   (error) => {\r\n  //     console.error(error);\r\n  //   }\r\n  // );\r\n  // console.log(x)\r\n\r\n  let [latitude, setLatitude] = useState('dhaka');\r\n  let [longitude, setLongitude] = useState('dhaka');\r\n  let [address, setAddress] = useState(\"canada\");\r\n  const encodedAddress = encodeURI(address);\r\n  \r\n    fetch(\r\n      `https://google-maps-geocoding.p.rapidapi.com/geocode/json?language=en&address=${encodedAddress}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"x-rapidapi-host\": \"google-maps-geocoding.p.rapidapi.com\",\r\n          \"x-rapidapi-key\": process.env.RAPIDAPI_KEY,\r\n        },\r\n      }\r\n    )\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        setLatitude(response.lat);\r\n        setLongitude(response.long);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  \r\n  console.log(latitude)\r\n  console.log(longitude)\r\n\r\n  return (\r\n    <div>\r\n      <Map\r\n        google={props.google}\r\n        zoom={8}\r\n        style={mapStyles}\r\n        initialCenter={{ lat: latitude, lng: longitude }}\r\n      >\r\n        <Marker position={{ lat: latitude, lng: longitude }} />\r\n      </Map>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: \"AIzaSyA9OU-Yxhjj-yocOCSzwPAOQpPnAOLJBj8\",\r\n})(GoogleMap);\r\n"]},"metadata":{},"sourceType":"module"}